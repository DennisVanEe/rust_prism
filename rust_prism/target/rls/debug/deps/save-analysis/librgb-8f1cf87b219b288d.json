{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20","program":"C:\\Users\\denni\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","rgb","--edition=2018","C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"as-bytes\"","--cfg","feature=\"bytemuck\"","--cfg","feature=\"default\"","-C","metadata=8f1cf87b219b288d","-C","extra-filename=-8f1cf87b219b288d","--out-dir","d:\\Repos\\rust_prism\\rust_prism\\target\\rls\\debug\\deps","-L","dependency=d:\\Repos\\rust_prism\\rust_prism\\target\\rls\\debug\\deps","--extern","bytemuck=d:\\Repos\\rust_prism\\rust_prism\\target\\rls\\debug\\deps\\libbytemuck-f176a4c4ad90d1e4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\denni\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Repos\\rust_prism\\rust_prism\\target\\rls\\debug\\deps\\librgb-8f1cf87b219b288d.rmeta"},"prelude":{"crate_id":{"name":"rgb","disambiguator":[7642977626568286361,1903351804404666031]},"crate_root":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src","external_crates":[{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[11710271729537087300,7936810236211621860]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[221620535861096092,14052674651022364528]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[6754765288211962248,11319126938093173531]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","num":4,"id":{"name":"bytemuck","disambiguator":[4581303904185315297,255851696712754714]}}],"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":0,"byte_end":6723,"line_start":1,"line_end":227,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":110},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":1476,"byte_end":1479,"line_start":52,"line_end":52,"column_start":19,"column_end":22},"alias_span":null,"name":"Pod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":14},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":1564,"byte_end":1572,"line_start":55,"line_end":55,"column_start":19,"column_end":27},"alias_span":null,"name":"Zeroable","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":1609,"byte_end":1610,"line_start":57,"line_end":57,"column_start":35,"column_end":36},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":1609,"byte_end":1610,"line_start":57,"line_end":57,"column_start":35,"column_end":36},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":1609,"byte_end":1610,"line_start":57,"line_end":57,"column_start":35,"column_end":36},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":1609,"byte_end":1610,"line_start":57,"line_end":57,"column_start":35,"column_end":36},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":1609,"byte_end":1610,"line_start":57,"line_end":57,"column_start":35,"column_end":36},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":0,"byte_end":6723,"line_start":1,"line_end":227,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":378},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":875},{"krate":0,"index":922},{"krate":0,"index":919},{"krate":0,"index":916},{"krate":0,"index":913},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":899},{"krate":0,"index":884},{"krate":0,"index":880},{"krate":0,"index":924},{"krate":0,"index":987},{"krate":0,"index":983},{"krate":0,"index":979},{"krate":0,"index":975},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":956},{"krate":0,"index":936},{"krate":0,"index":931},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"decl_id":null,"docs":" Basic struct for `RGB` and `RGBA` pixels. Packed, with red first, alpha last.","sig":null,"attributes":[{"value":"! Basic struct for `RGB` and `RGBA` pixels. Packed, with red first, alpha last.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":0,"byte_end":81,"line_start":1,"line_end":1,"column_start":1,"column_end":82}},{"value":"!","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":82,"byte_end":85,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This crate is intended to be the lowest common denominator for sharing `RGB`/`RGBA` bitmaps between other crates.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":86,"byte_end":203,"line_start":3,"line_end":3,"column_start":1,"column_end":118}},{"value":"!","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":204,"byte_end":207,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! The crate includes convenience functions for converting between the struct and bytes,","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":208,"byte_end":297,"line_start":5,"line_end":5,"column_start":1,"column_end":90}},{"value":"! and overloaded operators that work on all channels at once.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":298,"byte_end":361,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":362,"byte_end":365,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! This crate intentionally doesn't implement color management (due to complexity of the problem),","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":366,"byte_end":465,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"! but the structs can be parametrized to implement this if necessary. Other colorspaces are out of scope.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":466,"byte_end":573,"line_start":9,"line_end":9,"column_start":1,"column_end":108}},{"value":"!","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":574,"byte_end":577,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":578,"byte_end":589,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"! # use rgb::*;","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":590,"byte_end":607,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"! let pixel = RGB8 {r:0, g:100, b:255};","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":608,"byte_end":649,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":650,"byte_end":653,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! let pixel_rgba = pixel.alpha(255);","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":654,"byte_end":692,"line_start":15,"line_end":15,"column_start":1,"column_end":39}},{"value":"! let pixel = pixel_rgba.rgb();","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":693,"byte_end":726,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":727,"byte_end":730,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! let pixels = vec![pixel; 100];","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":731,"byte_end":765,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"! let bytes = pixels.as_bytes();","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":766,"byte_end":800,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":801,"byte_end":804,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! let half_bright = pixel.map(|channel| channel / 2);","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":805,"byte_end":860,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"! let doubled = half_bright * 2;","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":861,"byte_end":895,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"! # let _ = doubled;","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":896,"byte_end":918,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":919,"byte_end":926,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"no_std","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":986,"byte_end":996,"line_start":26,"line_end":26,"column_start":1,"column_end":11}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":998,"byte_end":1020,"line_start":28,"line_end":28,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":6991,"byte_end":6999,"line_start":15,"line_end":15,"column_start":11,"column_end":19},"name":"AsPixels","qualname":"::internal::convert::AsPixels","value":"AsPixels<PixelType>","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97}],"decl_id":null,"docs":" Casts a slice of bytes into a slice of pixels, e.g. `[u8]` to `[RGB8]`.","sig":null,"attributes":[{"value":"/ Casts a slice of bytes into a slice of pixels, e.g. `[u8]` to `[RGB8]`.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":6876,"byte_end":6951,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":6952,"byte_end":6955,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See also `FromSlice`","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":6956,"byte_end":6980,"line_start":14,"line_end":14,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":7431,"byte_end":7440,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"as_pixels","qualname":"::internal::convert::AsPixels::as_pixels","value":"pub fn as_pixels(&Self) -> &[PixelType]","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Reinterpret the slice as a read-only/shared slice of pixels.\n Multiple consecutive elements in the slice are intepreted as a single pixel\n (depending on format, e.g. 3 for RGB, 4 for RGBA).","sig":null,"attributes":[{"value":"/ Reinterpret the slice as a read-only/shared slice of pixels.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":7017,"byte_end":7081,"line_start":16,"line_end":16,"column_start":5,"column_end":69}},{"value":"/ Multiple consecutive elements in the slice are intepreted as a single pixel","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":7086,"byte_end":7165,"line_start":17,"line_end":17,"column_start":5,"column_end":84}},{"value":"/ (depending on format, e.g. 3 for RGB, 4 for RGBA).","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":7170,"byte_end":7224,"line_start":18,"line_end":18,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":7229,"byte_end":7232,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ Leftover elements are ignored if the slice isn't evenly divisible into pixels.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":7237,"byte_end":7319,"line_start":20,"line_end":20,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":7324,"byte_end":7327,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Use this method only when the type is known from context.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":7332,"byte_end":7393,"line_start":22,"line_end":22,"column_start":5,"column_end":66}},{"value":"/ See also `FromSlice`.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":7398,"byte_end":7423,"line_start":23,"line_end":23,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":7884,"byte_end":7897,"line_start":33,"line_end":33,"column_start":8,"column_end":21},"name":"as_pixels_mut","qualname":"::internal::convert::AsPixels::as_pixels_mut","value":"pub fn as_pixels_mut(&mut Self) -> &mut [PixelType]","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Reinterpret the slice as a mutable/exclusive slice of pixels.\n Multiple consecutive elements in the slice are intepreted as a single pixel\n (depending on format, e.g. 3 for RGB, 4 for RGBA).","sig":null,"attributes":[{"value":"/ Reinterpret the slice as a mutable/exclusive slice of pixels.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":7469,"byte_end":7534,"line_start":25,"line_end":25,"column_start":5,"column_end":70}},{"value":"/ Multiple consecutive elements in the slice are intepreted as a single pixel","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":7539,"byte_end":7618,"line_start":26,"line_end":26,"column_start":5,"column_end":84}},{"value":"/ (depending on format, e.g. 3 for RGB, 4 for RGBA).","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":7623,"byte_end":7677,"line_start":27,"line_end":27,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":7682,"byte_end":7685,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Leftover elements are ignored if the slice isn't evenly divisible into pixels.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":7690,"byte_end":7772,"line_start":29,"line_end":29,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":7777,"byte_end":7780,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Use this method only when the type is known from context.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":7785,"byte_end":7846,"line_start":31,"line_end":31,"column_start":5,"column_end":66}},{"value":"/ See also `FromSlice`.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":7851,"byte_end":7876,"line_start":32,"line_end":32,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":8883,"byte_end":8892,"line_start":67,"line_end":67,"column_start":11,"column_end":20},"name":"FromSlice","qualname":"::internal::convert::FromSlice","value":"FromSlice<T: Copy>","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" Cast a slice of component values (bytes) as a slice of RGB/RGBA pixels","sig":null,"attributes":[{"value":"/ Cast a slice of component values (bytes) as a slice of RGB/RGBA pixels","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":8719,"byte_end":8793,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":8794,"byte_end":8797,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ If there's any incomplete pixel at the end of the slice it is ignored.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":8798,"byte_end":8872,"line_start":66,"line_end":66,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":8951,"byte_end":8957,"line_start":69,"line_end":69,"column_start":8,"column_end":14},"name":"as_rgb","qualname":"::internal::convert::FromSlice::as_rgb","value":"pub fn as_rgb(&Self) -> &[RGB<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert slice as RGB pixels\n","sig":null,"attributes":[{"value":"/ Reinterpert slice as RGB pixels","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":8908,"byte_end":8943,"line_start":68,"line_end":68,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":9027,"byte_end":9034,"line_start":71,"line_end":71,"column_start":8,"column_end":15},"name":"as_rgba","qualname":"::internal::convert::FromSlice::as_rgba","value":"pub fn as_rgba(&Self) -> &[RGBA<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert slice as RGBA pixels\n","sig":null,"attributes":[{"value":"/ Reinterpert slice as RGBA pixels","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":8983,"byte_end":9019,"line_start":70,"line_end":70,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":9112,"byte_end":9122,"line_start":73,"line_end":73,"column_start":8,"column_end":18},"name":"as_rgb_mut","qualname":"::internal::convert::FromSlice::as_rgb_mut","value":"pub fn as_rgb_mut(&mut Self) -> &mut [RGB<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert mutable slice as RGB pixels\n","sig":null,"attributes":[{"value":"/ Reinterpert mutable slice as RGB pixels","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":9061,"byte_end":9104,"line_start":72,"line_end":72,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":9208,"byte_end":9219,"line_start":75,"line_end":75,"column_start":8,"column_end":19},"name":"as_rgba_mut","qualname":"::internal::convert::FromSlice::as_rgba_mut","value":"pub fn as_rgba_mut(&mut Self) -> &mut [RGBA<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert mutable slice as RGBA pixels\n","sig":null,"attributes":[{"value":"/ Reinterpert mutable slice as RGBA pixels","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":9156,"byte_end":9200,"line_start":74,"line_end":74,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":9312,"byte_end":9318,"line_start":78,"line_end":78,"column_start":8,"column_end":14},"name":"as_bgr","qualname":"::internal::convert::FromSlice::as_bgr","value":"pub fn as_bgr(&Self) -> &[BGR<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert slice as reverse-order BGR pixels\n","sig":null,"attributes":[{"value":"/ Reinterpert slice as reverse-order BGR pixels","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":9255,"byte_end":9304,"line_start":77,"line_end":77,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":9402,"byte_end":9409,"line_start":80,"line_end":80,"column_start":8,"column_end":15},"name":"as_bgra","qualname":"::internal::convert::FromSlice::as_bgra","value":"pub fn as_bgra(&Self) -> &[BGRA<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert slice as reverse-order BGRA pixels\n","sig":null,"attributes":[{"value":"/ Reinterpert slice as reverse-order BGRA pixels","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":9344,"byte_end":9394,"line_start":79,"line_end":79,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":9500,"byte_end":9510,"line_start":82,"line_end":82,"column_start":8,"column_end":18},"name":"as_bgr_mut","qualname":"::internal::convert::FromSlice::as_bgr_mut","value":"pub fn as_bgr_mut(&mut Self) -> &mut [BGR<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert ntable slice as reverse-order BGR pixels\n","sig":null,"attributes":[{"value":"/ Reinterpert ntable slice as reverse-order BGR pixels","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":9436,"byte_end":9492,"line_start":81,"line_end":81,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":9610,"byte_end":9621,"line_start":84,"line_end":84,"column_start":8,"column_end":19},"name":"as_bgra_mut","qualname":"::internal::convert::FromSlice::as_bgra_mut","value":"pub fn as_bgra_mut(&mut Self) -> &mut [BGRA<T>]","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Reinterpert mutable slice as reverse-order BGRA pixels\n","sig":null,"attributes":[{"value":"/ Reinterpert mutable slice as reverse-order BGRA pixels","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":9544,"byte_end":9602,"line_start":83,"line_end":83,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28090,"byte_end":28104,"line_start":3,"line_end":3,"column_start":11,"column_end":25},"name":"ComponentSlice","qualname":"::internal::pixel::ComponentSlice","value":"ComponentSlice<T>","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"decl_id":null,"docs":" Casting the struct to slices of its components\n","sig":null,"attributes":[{"value":"/ Casting the struct to slices of its components","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28029,"byte_end":28079,"line_start":2,"line_end":2,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28287,"byte_end":28295,"line_start":7,"line_end":7,"column_start":8,"column_end":16},"name":"as_slice","qualname":"::internal::pixel::ComponentSlice::as_slice","value":"pub fn as_slice(&Self) -> &[T]","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" The components interpreted as an array, e.g. one `RGB` expands to 3 elements.","sig":null,"attributes":[{"value":"/ The components interpreted as an array, e.g. one `RGB` expands to 3 elements.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28114,"byte_end":28195,"line_start":4,"line_end":4,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28200,"byte_end":28203,"line_start":5,"line_end":5,"column_start":5,"column_end":8}},{"value":"/ It's implemented for individual pixels as well as slices of pixels.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28208,"byte_end":28279,"line_start":6,"line_end":6,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28497,"byte_end":28509,"line_start":12,"line_end":12,"column_start":8,"column_end":20},"name":"as_mut_slice","qualname":"::internal::pixel::ComponentSlice::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [T]","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" The components interpreted as a mutable array, e.g. one `RGB` expands to 3 elements.","sig":null,"attributes":[{"value":"/ The components interpreted as a mutable array, e.g. one `RGB` expands to 3 elements.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28317,"byte_end":28405,"line_start":9,"line_end":9,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28410,"byte_end":28413,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ It's implemented for individual pixels as well as slices of pixels.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28418,"byte_end":28489,"line_start":11,"line_end":11,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":29064,"byte_end":29078,"line_start":29,"line_end":29,"column_start":11,"column_end":25},"name":"ComponentBytes","qualname":"::internal::pixel::ComponentBytes","value":"ComponentBytes<T: crate::Pod>","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" Casting a slice of `RGB/A` values to a slice of `u8`","sig":null,"attributes":[{"value":"/ Casting a slice of `RGB/A` values to a slice of `u8`","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28537,"byte_end":28593,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28594,"byte_end":28597,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If instead of `RGB8` you use `RGB<MyCustomType>`, and you want to cast from/to that custom type,","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28598,"byte_end":28698,"line_start":17,"line_end":17,"column_start":1,"column_end":101}},{"value":"/ implement the `Plain` trait for it:","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28699,"byte_end":28738,"line_start":18,"line_end":18,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28739,"byte_end":28742,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28743,"byte_end":28754,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # #[derive(Copy, Clone)]","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28755,"byte_end":28783,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ # struct MyCustomType;","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28784,"byte_end":28810,"line_start":22,"line_end":22,"column_start":1,"column_end":27}},{"value":"/ unsafe impl rgb::Pod for MyCustomType {}","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28811,"byte_end":28855,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/ unsafe impl rgb::Zeroable for MyCustomType {}","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28856,"byte_end":28905,"line_start":24,"line_end":24,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28906,"byte_end":28913,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28914,"byte_end":28917,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Plain types are not allowed to contain struct padding, booleans, chars, enums, references or pointers.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":28918,"byte_end":29024,"line_start":27,"line_end":27,"column_start":1,"column_end":107}},{"value":"cfg(feature = \"as-bytes\")","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":29025,"byte_end":29053,"line_start":28,"line_end":28,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":29271,"byte_end":29279,"line_start":32,"line_end":32,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::internal::pixel::ComponentBytes::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" The components interpreted as raw bytes, in machine's native endian. In `RGB` bytes of the red component are first.\n","sig":null,"attributes":[{"value":"/ The components interpreted as raw bytes, in machine's native endian. In `RGB` bytes of the red component are first.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":29130,"byte_end":29249,"line_start":30,"line_end":30,"column_start":5,"column_end":124}},{"value":"inline","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":29254,"byte_end":29263,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":29673,"byte_end":29685,"line_start":42,"line_end":42,"column_start":8,"column_end":20},"name":"as_bytes_mut","qualname":"::internal::pixel::ComponentBytes::as_bytes_mut","value":"pub fn as_bytes_mut(&mut Self) -> &mut [u8]","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" The components interpreted as raw bytes, in machine's native endian. In `RGB` bytes of the red component are first.\n","sig":null,"attributes":[{"value":"/ The components interpreted as raw bytes, in machine's native endian. In `RGB` bytes of the red component are first.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":29532,"byte_end":29651,"line_start":40,"line_end":40,"column_start":5,"column_end":124}},{"value":"inline","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":29656,"byte_end":29665,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":30276,"byte_end":30288,"line_start":62,"line_end":62,"column_start":11,"column_end":23},"name":"ComponentMap","qualname":"::internal::pixel::ComponentMap","value":"ComponentMap<DestPixel, SrcComponent, DestComponent>","parent":null,"children":[{"krate":0,"index":267}],"decl_id":null,"docs":" Applying operation to every component","sig":null,"attributes":[{"value":"/ Applying operation to every component","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":29954,"byte_end":29995,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":29996,"byte_end":29999,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":30000,"byte_end":30011,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/ use rgb::ComponentMap;","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":30012,"byte_end":30038,"line_start":54,"line_end":54,"column_start":1,"column_end":27}},{"value":"/ # let pixel = rgb::RGB::new(0u8,0,0);","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":30039,"byte_end":30080,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/ let inverted = pixel.map(|c| 255 - c);","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":30081,"byte_end":30123,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":30124,"byte_end":30127,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // For simple math there are Add/Sub/Mul implementations:","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":30128,"byte_end":30189,"line_start":58,"line_end":58,"column_start":1,"column_end":62}},{"value":"/ let halved = pixel.map(|c| c / 2);","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":30190,"byte_end":30228,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ let doubled = pixel * 2;","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":30229,"byte_end":30257,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":30258,"byte_end":30265,"line_start":61,"line_end":61,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":30538,"byte_end":30541,"line_start":66,"line_end":66,"column_start":8,"column_end":11},"name":"map","qualname":"::internal::pixel::ComponentMap::map","value":"pub fn map<Callback>(&Self, Callback) -> DestPixel where\nCallback: FnMut(SrcComponent) -> DestComponent","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":" Convenience function (equivalent of `self.iter().map().collect()`) for applying the same formula to every component.","sig":null,"attributes":[{"value":"/ Convenience function (equivalent of `self.iter().map().collect()`) for applying the same formula to every component.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":30335,"byte_end":30455,"line_start":63,"line_end":63,"column_start":5,"column_end":125}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":30460,"byte_end":30463,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that it returns the pixel directly, not an Interator.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\pixel.rs","byte_start":30468,"byte_end":30530,"line_start":65,"line_end":65,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":30923,"byte_end":30926,"line_start":13,"line_end":13,"column_start":18,"column_end":21},"name":"new","qualname":"<RGB<T>>::new","value":"pub const fn new(T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for creating a new pixel\n The order of arguments is R,G,B\n","sig":null,"attributes":[{"value":"/ Convenience function for creating a new pixel","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":30794,"byte_end":30843,"line_start":10,"line_end":10,"column_start":5,"column_end":54}},{"value":"/ The order of arguments is R,G,B","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":30848,"byte_end":30883,"line_start":11,"line_end":11,"column_start":5,"column_end":40}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":30888,"byte_end":30905,"line_start":12,"line_end":12,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":31252,"byte_end":31255,"line_start":23,"line_end":23,"column_start":18,"column_end":21},"name":"new","qualname":"<BGR<T>>::new","value":"pub const fn new(T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for creating a new pixel\n Wargning: The order of arguments is R,G,B\n","sig":null,"attributes":[{"value":"/ Convenience function for creating a new pixel","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":31010,"byte_end":31059,"line_start":19,"line_end":19,"column_start":5,"column_end":54}},{"value":"/ Wargning: The order of arguments is R,G,B","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":31064,"byte_end":31109,"line_start":20,"line_end":20,"column_start":5,"column_end":50}},{"value":"deprecated(note =\n             \"This function has a misleading order of arguments. Use BGR{} literal instead\")","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":31114,"byte_end":31212,"line_start":21,"line_end":21,"column_start":5,"column_end":103}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":31217,"byte_end":31234,"line_start":22,"line_end":22,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":37640,"byte_end":37643,"line_start":12,"line_end":12,"column_start":18,"column_end":21},"name":"new","qualname":"<RGBA<T>>::new","value":"pub const fn new(T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for creating a new pixel\n The order of arguments is R,G,B,A\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":37509,"byte_end":37526,"line_start":9,"line_end":9,"column_start":5,"column_end":22}},{"value":"/ Convenience function for creating a new pixel","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":37531,"byte_end":37580,"line_start":10,"line_end":10,"column_start":5,"column_end":54}},{"value":"/ The order of arguments is R,G,B,A","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":37585,"byte_end":37622,"line_start":11,"line_end":11,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":37868,"byte_end":37877,"line_start":21,"line_end":21,"column_start":18,"column_end":27},"name":"new_alpha","qualname":"<RGBA<T, A>>::new_alpha","value":"pub const fn new_alpha(T, T, T, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for creating a new pixel\n The order of arguments is R,G,B,A\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":37737,"byte_end":37754,"line_start":18,"line_end":18,"column_start":5,"column_end":22}},{"value":"/ Convenience function for creating a new pixel","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":37759,"byte_end":37808,"line_start":19,"line_end":19,"column_start":5,"column_end":54}},{"value":"/ The order of arguments is R,G,B,A","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":37813,"byte_end":37850,"line_start":20,"line_end":20,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":38210,"byte_end":38213,"line_start":31,"line_end":31,"column_start":18,"column_end":21},"name":"new","qualname":"<BGRA<T>>::new","value":"pub const fn new(T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for creating a new pixel\n Warning: The order of arguments is R,G,B,A\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":37966,"byte_end":37983,"line_start":27,"line_end":27,"column_start":5,"column_end":22}},{"value":"/ Convenience function for creating a new pixel","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":37988,"byte_end":38037,"line_start":28,"line_end":28,"column_start":5,"column_end":54}},{"value":"/ Warning: The order of arguments is R,G,B,A","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":38042,"byte_end":38088,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"deprecated(note =\n             \"This function has a misleading order of arguments. Use BGRA{} literal instead\")","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":38093,"byte_end":38192,"line_start":30,"line_end":30,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":38551,"byte_end":38560,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"name":"new_alpha","qualname":"<BGRA<T, A>>::new_alpha","value":"pub const fn new_alpha(T, T, T, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for creating a new pixel\n Warning: The order of arguments is R,G,B,A\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":38307,"byte_end":38324,"line_start":37,"line_end":37,"column_start":5,"column_end":22}},{"value":"/ Convenience function for creating a new pixel","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":38329,"byte_end":38378,"line_start":38,"line_end":38,"column_start":5,"column_end":54}},{"value":"/ Warning: The order of arguments is R,G,B,A","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":38383,"byte_end":38429,"line_start":39,"line_end":39,"column_start":5,"column_end":51}},{"value":"deprecated(note =\n             \"This function has a misleading order of arguments. Use BGRA{} literal instead\")","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":38434,"byte_end":38533,"line_start":40,"line_end":40,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":45533,"byte_end":45540,"line_start":248,"line_end":248,"column_start":12,"column_end":19},"name":"rgb_mut","qualname":"<RGBA<T, A>>::rgb_mut","value":"pub fn rgb_mut(&mut Self) -> &mut RGB<T>","parent":null,"children":[],"decl_id":null,"docs":" Provide a mutable view of only RGB components (leaving out alpha).\n Useful to change color without changing opacity.\n","sig":null,"attributes":[{"value":"/ Provide a mutable view of only RGB components (leaving out alpha).","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":45372,"byte_end":45442,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/ Useful to change color without changing opacity.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":45447,"byte_end":45499,"line_start":246,"line_end":246,"column_start":5,"column_end":57}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":45504,"byte_end":45521,"line_start":247,"line_end":247,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":45913,"byte_end":45920,"line_start":260,"line_end":260,"column_start":12,"column_end":19},"name":"rgb_mut","qualname":"<BGRA<T, A>>::rgb_mut","value":"pub fn rgb_mut(&mut Self) -> &mut BGR<T>","parent":null,"children":[],"decl_id":null,"docs":" Provide a mutable view of only RGB components (leaving out alpha).\n Useful to change color without changing opacity.\n","sig":null,"attributes":[{"value":"/ Provide a mutable view of only RGB components (leaving out alpha).","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":45683,"byte_end":45753,"line_start":256,"line_end":256,"column_start":5,"column_end":75}},{"value":"/ Useful to change color without changing opacity.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":45758,"byte_end":45810,"line_start":257,"line_end":257,"column_start":5,"column_end":57}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":45815,"byte_end":45832,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"deprecated(note = \"This function will change. Use bgr_mut()\")","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":45837,"byte_end":45901,"line_start":259,"line_end":259,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":46176,"byte_end":46183,"line_start":268,"line_end":268,"column_start":12,"column_end":19},"name":"bgr_mut","qualname":"<BGRA<T, A>>::bgr_mut","value":"pub fn bgr_mut(&mut Self) -> &mut BGR<T>","parent":null,"children":[],"decl_id":null,"docs":" Provide a mutable view of only RGB components (leaving out alpha).\n Useful to change color without changing opacity.\n","sig":null,"attributes":[{"value":"/ Provide a mutable view of only RGB components (leaving out alpha).","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":46037,"byte_end":46107,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/ Useful to change color without changing opacity.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":46112,"byte_end":46164,"line_start":267,"line_end":267,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":46995,"byte_end":46998,"line_start":295,"line_end":295,"column_start":12,"column_end":15},"name":"rgb","qualname":"<RGBA<T, A>>::rgb","value":"pub fn rgb(&Self) -> RGB<T>","parent":null,"children":[],"decl_id":null,"docs":" Copy RGB components out of the RGBA struct","sig":null,"attributes":[{"value":"/ Copy RGB components out of the RGBA struct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":46840,"byte_end":46886,"line_start":291,"line_end":291,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":46891,"byte_end":46894,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note: you can use `.into()` to convert between other types","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":46899,"byte_end":46961,"line_start":293,"line_end":293,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":46966,"byte_end":46983,"line_start":294,"line_end":294,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":47349,"byte_end":47352,"line_start":306,"line_end":306,"column_start":12,"column_end":15},"name":"rgb","qualname":"<BGRA<T, A>>::rgb","value":"pub fn rgb(&Self) -> BGR<T>","parent":null,"children":[],"decl_id":null,"docs":" Copy RGB components out of the RGBA struct","sig":null,"attributes":[{"value":"/ Copy RGB components out of the RGBA struct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":47129,"byte_end":47175,"line_start":301,"line_end":301,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":47180,"byte_end":47183,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Note: you can use `.into()` to convert between other types","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":47188,"byte_end":47250,"line_start":303,"line_end":303,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":47255,"byte_end":47272,"line_start":304,"line_end":304,"column_start":5,"column_end":22}},{"value":"deprecated(note = \"This function will change. Use bgr()\")","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":47277,"byte_end":47337,"line_start":305,"line_end":305,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"alt","qualname":"::alt","value":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":663},{"krate":0,"index":710},{"krate":0,"index":707},{"krate":0,"index":704},{"krate":0,"index":701},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":687},{"krate":0,"index":672},{"krate":0,"index":668},{"krate":0,"index":712},{"krate":0,"index":775},{"krate":0,"index":771},{"krate":0,"index":767},{"krate":0,"index":763},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":744},{"krate":0,"index":724},{"krate":0,"index":719},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":778},{"krate":0,"index":816},{"krate":0,"index":813},{"krate":0,"index":810},{"krate":0,"index":807},{"krate":0,"index":802},{"krate":0,"index":804},{"krate":0,"index":796},{"krate":0,"index":798},{"krate":0,"index":793},{"krate":0,"index":786},{"krate":0,"index":782},{"krate":0,"index":818},{"krate":0,"index":872},{"krate":0,"index":868},{"krate":0,"index":864},{"krate":0,"index":860},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":841},{"krate":0,"index":829},{"krate":0,"index":824},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":412},{"krate":0,"index":416},{"krate":0,"index":427},{"krate":0,"index":432},{"krate":0,"index":436},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":446},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":455}],"decl_id":null,"docs":" BGR/BGRA alernative layouts & grayscale","sig":null,"attributes":[{"value":"/ BGR/BGRA alernative layouts & grayscale","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":1274,"byte_end":1317,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":1318,"byte_end":1321,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ BGR might be useful for some Windows or OpenGL APIs.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":1322,"byte_end":1378,"line_start":47,"line_end":47,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":50820,"byte_end":50823,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"BGR","qualname":"::alt::BGR","value":"BGR { b, g, r }","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667}],"decl_id":null,"docs":" RGB in reverse byte order\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":50628,"byte_end":50638,"line_start":6,"line_end":6,"column_start":1,"column_end":11}},{"value":"/ RGB in reverse byte order","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":50779,"byte_end":50808,"line_start":9,"line_end":9,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":50868,"byte_end":50869,"line_start":12,"line_end":12,"column_start":9,"column_end":10},"name":"b","qualname":"::alt::BGR::b","value":"ComponentType","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Blue first\n","sig":null,"attributes":[{"value":"/ Blue first","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":50845,"byte_end":50859,"line_start":11,"line_end":11,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":50908,"byte_end":50909,"line_start":14,"line_end":14,"column_start":9,"column_end":10},"name":"g","qualname":"::alt::BGR::g","value":"ComponentType","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Green\n","sig":null,"attributes":[{"value":"/ Green","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":50890,"byte_end":50899,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":50951,"byte_end":50952,"line_start":16,"line_end":16,"column_start":9,"column_end":10},"name":"r","qualname":"::alt::BGR::r","value":"ComponentType","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Red last\n","sig":null,"attributes":[{"value":"/ Red last","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":50930,"byte_end":50942,"line_start":15,"line_end":15,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":51144,"byte_end":51148,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"BGRA","qualname":"::alt::BGRA","value":"BGRA { b, g, r, a }","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"decl_id":null,"docs":" BGR+A\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":50972,"byte_end":50982,"line_start":19,"line_end":19,"column_start":1,"column_end":11}},{"value":"/ BGR+A","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":51123,"byte_end":51132,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Field","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":51229,"byte_end":51230,"line_start":25,"line_end":25,"column_start":9,"column_end":10},"name":"b","qualname":"::alt::BGRA::b","value":"ComponentType","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Blue first\n","sig":null,"attributes":[{"value":"/ Blue first","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":51206,"byte_end":51220,"line_start":24,"line_end":24,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":51269,"byte_end":51270,"line_start":27,"line_end":27,"column_start":9,"column_end":10},"name":"g","qualname":"::alt::BGRA::g","value":"ComponentType","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Green\n","sig":null,"attributes":[{"value":"/ Green","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":51251,"byte_end":51260,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":51307,"byte_end":51308,"line_start":29,"line_end":29,"column_start":9,"column_end":10},"name":"r","qualname":"::alt::BGRA::r","value":"ComponentType","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Red\n","sig":null,"attributes":[{"value":"/ Red","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":51291,"byte_end":51298,"line_start":28,"line_end":28,"column_start":5,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":51352,"byte_end":51353,"line_start":31,"line_end":31,"column_start":9,"column_end":10},"name":"a","qualname":"::alt::BGRA::a","value":"AlphaComponentType","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Alpha last\n","sig":null,"attributes":[{"value":"/ Alpha last","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":51329,"byte_end":51343,"line_start":30,"line_end":30,"column_start":5,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":52263,"byte_end":52267,"line_start":67,"line_end":67,"column_start":10,"column_end":14},"name":"BGR8","qualname":"::alt::BGR8","value":"BGR<u8>","parent":null,"children":[],"decl_id":null,"docs":" 8-bit BGR\n","sig":null,"attributes":[{"value":"/ 8-bit BGR","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":52240,"byte_end":52253,"line_start":66,"line_end":66,"column_start":1,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":52331,"byte_end":52336,"line_start":70,"line_end":70,"column_start":10,"column_end":15},"name":"BGR16","qualname":"::alt::BGR16","value":"BGR<u16>","parent":null,"children":[],"decl_id":null,"docs":" 16-bit BGR in machine's native endian\n","sig":null,"attributes":[{"value":"/ 16-bit BGR in machine's native endian","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":52280,"byte_end":52321,"line_start":69,"line_end":69,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":52374,"byte_end":52379,"line_start":73,"line_end":73,"column_start":10,"column_end":15},"name":"BGRA8","qualname":"::alt::BGRA8","value":"BGRA<u8>","parent":null,"children":[],"decl_id":null,"docs":" 8-bit BGRA\n","sig":null,"attributes":[{"value":"/ 8-bit BGRA","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":52350,"byte_end":52364,"line_start":72,"line_end":72,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":52676,"byte_end":52682,"line_start":84,"line_end":84,"column_start":10,"column_end":16},"name":"BGRA16","qualname":"::alt::BGRA16","value":"BGRA<u16>","parent":null,"children":[],"decl_id":null,"docs":" 16-bit BGR in machine's native endian\n","sig":null,"attributes":[{"value":"/ 16-bit BGR in machine's native endian","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":52625,"byte_end":52666,"line_start":83,"line_end":83,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":53225,"byte_end":53229,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"Gray","qualname":"::alt::Gray","value":"","parent":null,"children":[],"decl_id":null,"docs":" Grayscale. Use `.0` or `*` (deref) to access the value.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":53003,"byte_end":53013,"line_start":96,"line_end":96,"column_start":1,"column_end":11}},{"value":"/ Grayscale. Use `.0` or `*` (deref) to access the value.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":53154,"byte_end":53213,"line_start":99,"line_end":99,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":781},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":53275,"byte_end":53292,"line_start":102,"line_end":102,"column_start":5,"column_end":22},"name":"0","qualname":"::alt::Gray::0","value":"ComponentType","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" brightness level\n","sig":null,"attributes":[{"value":"/ brightness level","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":53250,"byte_end":53270,"line_start":101,"line_end":101,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":53511,"byte_end":53520,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"GrayAlpha","qualname":"::alt::GrayAlpha","value":"","parent":null,"children":[],"decl_id":null,"docs":" Grayscale with alpha. Use `.0`/`.1` to access.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":53298,"byte_end":53308,"line_start":105,"line_end":105,"column_start":1,"column_end":11}},{"value":"/ Grayscale with alpha. Use `.0`/`.1` to access.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":53449,"byte_end":53499,"line_start":108,"line_end":108,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":53602,"byte_end":53619,"line_start":111,"line_end":111,"column_start":5,"column_end":22},"name":"0","qualname":"::alt::GrayAlpha::0","value":"ComponentType","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" brightness level\n","sig":null,"attributes":[{"value":"/ brightness level","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":53577,"byte_end":53597,"line_start":110,"line_end":110,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":53639,"byte_end":53661,"line_start":113,"line_end":113,"column_start":5,"column_end":27},"name":"1","qualname":"::alt::GrayAlpha::1","value":"AlphaComponentType","parent":{"krate":0,"index":818},"children":[],"decl_id":null,"docs":" alpha\n","sig":null,"attributes":[{"value":"/ alpha","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":53625,"byte_end":53634,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54129,"byte_end":54134,"line_start":126,"line_end":126,"column_start":10,"column_end":15},"name":"GRAY8","qualname":"::alt::GRAY8","value":"Gray<u8>","parent":null,"children":[],"decl_id":null,"docs":" 8-bit gray\n","sig":null,"attributes":[{"value":"/ 8-bit gray","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54105,"byte_end":54119,"line_start":125,"line_end":125,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54200,"byte_end":54206,"line_start":129,"line_end":129,"column_start":10,"column_end":16},"name":"GRAY16","qualname":"::alt::GRAY16","value":"Gray<u16>","parent":null,"children":[],"decl_id":null,"docs":" 16-bit gray in machine's native endian\n","sig":null,"attributes":[{"value":"/ 16-bit gray in machine's native endian","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54148,"byte_end":54190,"line_start":128,"line_end":128,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54283,"byte_end":54289,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"name":"GRAYA8","qualname":"::alt::GRAYA8","value":"GrayAlpha<u8>","parent":null,"children":[],"decl_id":null,"docs":" 8-bit gray with alpha in machine's native endian\n","sig":null,"attributes":[{"value":"/ 8-bit gray with alpha in machine's native endian","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54221,"byte_end":54273,"line_start":131,"line_end":131,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54371,"byte_end":54378,"line_start":135,"line_end":135,"column_start":10,"column_end":17},"name":"GRAYA16","qualname":"::alt::GRAYA16","value":"GrayAlpha<u16>","parent":null,"children":[],"decl_id":null,"docs":" 16-bit gray with alpha in machine's native endian\n","sig":null,"attributes":[{"value":"/ 16-bit gray with alpha in machine's native endian","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54308,"byte_end":54361,"line_start":134,"line_end":134,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54739,"byte_end":54743,"line_start":153,"line_end":153,"column_start":12,"column_end":16},"name":"gray","qualname":"<GrayAlpha<T, A>>::gray","value":"pub fn gray(&Self) -> Gray<T>","parent":null,"children":[],"decl_id":null,"docs":" Copy `Gray` component out of the `GrayAlpha` struct\n","sig":null,"attributes":[{"value":"/ Copy `Gray` component out of the `GrayAlpha` struct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54650,"byte_end":54705,"line_start":151,"line_end":151,"column_start":5,"column_end":60}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54710,"byte_end":54727,"line_start":152,"line_end":152,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54941,"byte_end":54949,"line_start":161,"line_end":161,"column_start":12,"column_end":20},"name":"gray_mut","qualname":"<GrayAlpha<T, A>>::gray_mut","value":"pub fn gray_mut(&mut Self) -> &mut Gray<T>","parent":null,"children":[],"decl_id":null,"docs":" Provide a mutable view of only `Gray` component (leaving out alpha).\n","sig":null,"attributes":[{"value":"/ Provide a mutable view of only `Gray` component (leaving out alpha).","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54835,"byte_end":54907,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54912,"byte_end":54929,"line_start":160,"line_end":160,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":55202,"byte_end":55207,"line_start":171,"line_end":171,"column_start":12,"column_end":17},"name":"alpha","qualname":"<GrayAlpha<T, A>>::alpha","value":"pub fn alpha(&Self, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `GrayAlpha` with the new alpha value, but same gray value\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":55094,"byte_end":55111,"line_start":169,"line_end":169,"column_start":5,"column_end":22}},{"value":"/ Create a new `GrayAlpha` with the new alpha value, but same gray value","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":55116,"byte_end":55190,"line_start":170,"line_end":170,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":55354,"byte_end":55363,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"map_alpha","qualname":"<GrayAlpha<T, A>>::map_alpha","value":"pub fn map_alpha<F, B>(&Self, F) -> GrayAlpha<T, B> where F: FnOnce(A) -> B","parent":null,"children":[],"decl_id":null,"docs":" Create a new `GrayAlpha` with a new alpha value created by the callback.\n","sig":null,"attributes":[{"value":"/ Create a new `GrayAlpha` with a new alpha value created by the callback.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":55266,"byte_end":55342,"line_start":175,"line_end":175,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":55611,"byte_end":55619,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"map_gray","qualname":"<GrayAlpha<T, A>>::map_gray","value":"pub fn map_gray<F, U, B>(&Self, F) -> GrayAlpha<U, B> where F: FnOnce(T) -> U,\nU: Clone, B: From<A> + Clone","parent":null,"children":[],"decl_id":null,"docs":" Create new `GrayAlpha` with the same alpha value, but different `Gray` value\n","sig":null,"attributes":[{"value":"/ Create new `GrayAlpha` with the same alpha value, but different `Gray` value","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":55497,"byte_end":55577,"line_start":182,"line_end":182,"column_start":5,"column_end":85}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":55582,"byte_end":55599,"line_start":183,"line_end":183,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2083,"byte_end":2086,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"RGB","qualname":"::RGB","value":"RGB { r, g, b }","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879}],"decl_id":null,"docs":" The RGB pixel","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":1748,"byte_end":1758,"line_start":63,"line_end":63,"column_start":1,"column_end":11}},{"value":"/ The RGB pixel","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":1899,"byte_end":1916,"line_start":66,"line_end":66,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":1917,"byte_end":1920,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ The component type can be `u8` (aliased as `RGB8`), `u16` (aliased as `RGB16`),","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":1921,"byte_end":2004,"line_start":68,"line_end":68,"column_start":1,"column_end":84}},{"value":"/ or any other type (but simple copyable types are recommended.)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2005,"byte_end":2071,"line_start":69,"line_end":69,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":877},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2124,"byte_end":2125,"line_start":72,"line_end":72,"column_start":9,"column_end":10},"name":"r","qualname":"::RGB::r","value":"ComponentType","parent":{"krate":0,"index":875},"children":[],"decl_id":null,"docs":" Red\n","sig":null,"attributes":[{"value":"/ Red","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2108,"byte_end":2115,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2164,"byte_end":2165,"line_start":74,"line_end":74,"column_start":9,"column_end":10},"name":"g","qualname":"::RGB::g","value":"ComponentType","parent":{"krate":0,"index":875},"children":[],"decl_id":null,"docs":" Green\n","sig":null,"attributes":[{"value":"/ Green","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2146,"byte_end":2155,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2203,"byte_end":2204,"line_start":76,"line_end":76,"column_start":9,"column_end":10},"name":"b","qualname":"::RGB::b","value":"ComponentType","parent":{"krate":0,"index":875},"children":[],"decl_id":null,"docs":" Blue\n","sig":null,"attributes":[{"value":"/ Blue","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2186,"byte_end":2194,"line_start":75,"line_end":75,"column_start":5,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2714,"byte_end":2718,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"RGBA","qualname":"::RGBA","value":"RGBA { r, g, b, a }","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930}],"decl_id":null,"docs":" The RGBA pixel","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2224,"byte_end":2234,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/ The RGBA pixel","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2375,"byte_end":2393,"line_start":82,"line_end":82,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2394,"byte_end":2397,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ The component type can be `u8` (aliased as `RGBA8`), `u16` (aliased as `RGBA16`),","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2398,"byte_end":2483,"line_start":84,"line_end":84,"column_start":1,"column_end":86}},{"value":"/ or any other type (but simple copyable types are recommended.)","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2484,"byte_end":2550,"line_start":85,"line_end":85,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2551,"byte_end":2554,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ You can specify a different type for alpha, but it's only for special cases","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2555,"byte_end":2634,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ (e.g. if you use a newtype like `RGBA<LinearLight<u16>, u16>`).","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2635,"byte_end":2702,"line_start":88,"line_end":88,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2792,"byte_end":2793,"line_start":91,"line_end":91,"column_start":9,"column_end":10},"name":"r","qualname":"::RGBA::r","value":"ComponentType","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":" Red\n","sig":null,"attributes":[{"value":"/ Red","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2776,"byte_end":2783,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2832,"byte_end":2833,"line_start":93,"line_end":93,"column_start":9,"column_end":10},"name":"g","qualname":"::RGBA::g","value":"ComponentType","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":" Green\n","sig":null,"attributes":[{"value":"/ Green","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2814,"byte_end":2823,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2871,"byte_end":2872,"line_start":95,"line_end":95,"column_start":9,"column_end":10},"name":"b","qualname":"::RGBA::b","value":"ComponentType","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":" Blue\n","sig":null,"attributes":[{"value":"/ Blue","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2854,"byte_end":2862,"line_start":94,"line_end":94,"column_start":5,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2911,"byte_end":2912,"line_start":97,"line_end":97,"column_start":9,"column_end":10},"name":"a","qualname":"::RGBA::a","value":"AlphaComponentType","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":" Alpha\n","sig":null,"attributes":[{"value":"/ Alpha","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2893,"byte_end":2902,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":3040,"byte_end":3044,"line_start":103,"line_end":103,"column_start":10,"column_end":14},"name":"RGB8","qualname":"::RGB8","value":"RGB<u8>","parent":null,"children":[],"decl_id":null,"docs":" 8-bit RGB","sig":null,"attributes":[{"value":"/ 8-bit RGB","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2937,"byte_end":2950,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2951,"byte_end":2954,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ The colorspace is techincally undefined, but generally sRGB is assumed.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":2955,"byte_end":3030,"line_start":102,"line_end":102,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":3177,"byte_end":3182,"line_start":108,"line_end":108,"column_start":10,"column_end":15},"name":"RGB16","qualname":"::RGB16","value":"RGB<u16>","parent":null,"children":[],"decl_id":null,"docs":" 16-bit RGB in machine's native endian","sig":null,"attributes":[{"value":"/ 16-bit RGB in machine's native endian","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":3057,"byte_end":3098,"line_start":105,"line_end":105,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":3099,"byte_end":3102,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Be careful to perform byte-swapping when reading from files.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":3103,"byte_end":3167,"line_start":107,"line_end":107,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":3267,"byte_end":3272,"line_start":111,"line_end":111,"column_start":10,"column_end":15},"name":"RGBA8","qualname":"::RGBA8","value":"RGBA<u8>","parent":null,"children":[],"decl_id":null,"docs":" 8-bit RGBA, alpha is last. 0 = transparent, 255 = opaque.\n","sig":null,"attributes":[{"value":"/ 8-bit RGBA, alpha is last. 0 = transparent, 255 = opaque.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":3196,"byte_end":3257,"line_start":110,"line_end":110,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":3394,"byte_end":3400,"line_start":116,"line_end":116,"column_start":10,"column_end":16},"name":"RGBA16","qualname":"::RGBA16","value":"RGBA<u16>","parent":null,"children":[],"decl_id":null,"docs":" 16-bit RGB in machine's native endian. 0 = transparent, 65535 = opaque.","sig":null,"attributes":[{"value":"/ 16-bit RGB in machine's native endian. 0 = transparent, 65535 = opaque.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":3286,"byte_end":3361,"line_start":113,"line_end":113,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":3362,"byte_end":3365,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Alpha is last.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":3366,"byte_end":3384,"line_start":115,"line_end":115,"column_start":1,"column_end":19}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\array.rs","byte_start":15530,"byte_end":15533,"line_start":4,"line_end":4,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\array.rs","byte_start":15724,"byte_end":15727,"line_start":15,"line_end":15,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\array.rs","byte_start":15850,"byte_end":15854,"line_start":22,"line_end":22,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\array.rs","byte_start":16070,"byte_end":16074,"line_start":34,"line_end":34,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\array.rs","byte_start":16205,"byte_end":16208,"line_start":41,"line_end":41,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\array.rs","byte_start":16399,"byte_end":16402,"line_start":52,"line_end":52,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\array.rs","byte_start":16525,"byte_end":16529,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\array.rs","byte_start":16745,"byte_end":16749,"line_start":71,"line_end":71,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\tuple.rs","byte_start":17639,"byte_end":17642,"line_start":7,"line_end":7,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\tuple.rs","byte_start":17832,"byte_end":17835,"line_start":18,"line_end":18,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\tuple.rs","byte_start":17958,"byte_end":17962,"line_start":25,"line_end":25,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\tuple.rs","byte_start":18184,"byte_end":18188,"line_start":37,"line_end":37,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\tuple.rs","byte_start":18319,"byte_end":18322,"line_start":44,"line_end":44,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\tuple.rs","byte_start":18498,"byte_end":18501,"line_start":54,"line_end":54,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\tuple.rs","byte_start":18610,"byte_end":18614,"line_start":60,"line_end":60,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\tuple.rs","byte_start":18822,"byte_end":18826,"line_start":71,"line_end":71,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":12448,"byte_end":12451,"line_start":179,"line_end":179,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":12659,"byte_end":12663,"line_start":189,"line_end":189,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":12887,"byte_end":12890,"line_start":200,"line_end":200,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":13065,"byte_end":13069,"line_start":210,"line_end":210,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":13268,"byte_end":13271,"line_start":221,"line_end":221,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":13446,"byte_end":13450,"line_start":231,"line_end":231,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":13645,"byte_end":13649,"line_start":242,"line_end":242,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":13732,"byte_end":13735,"line_start":248,"line_end":248,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":13828,"byte_end":13832,"line_start":254,"line_end":254,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":13923,"byte_end":13932,"line_start":260,"line_end":260,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":14014,"byte_end":14018,"line_start":267,"line_end":267,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":14113,"byte_end":14116,"line_start":273,"line_end":273,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":14221,"byte_end":14225,"line_start":279,"line_end":279,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":14328,"byte_end":14337,"line_start":285,"line_end":285,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":19389,"byte_end":19392,"line_start":7,"line_end":7,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":19682,"byte_end":19685,"line_start":21,"line_end":21,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":19950,"byte_end":19953,"line_start":34,"line_end":34,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":20243,"byte_end":20246,"line_start":48,"line_end":48,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":20530,"byte_end":20533,"line_start":62,"line_end":62,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":20753,"byte_end":20756,"line_start":74,"line_end":74,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":20931,"byte_end":20934,"line_start":84,"line_end":84,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":21136,"byte_end":21139,"line_start":96,"line_end":96,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":21337,"byte_end":21341,"line_start":106,"line_end":106,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":21694,"byte_end":21698,"line_start":120,"line_end":120,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":22054,"byte_end":22058,"line_start":135,"line_end":135,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":22425,"byte_end":22429,"line_start":150,"line_end":150,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":22846,"byte_end":22850,"line_start":167,"line_end":167,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":23146,"byte_end":23150,"line_start":180,"line_end":180,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":23329,"byte_end":23333,"line_start":190,"line_end":190,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":23537,"byte_end":23541,"line_start":202,"line_end":202,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":23716,"byte_end":23719,"line_start":212,"line_end":212,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":23921,"byte_end":23924,"line_start":224,"line_end":224,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":24099,"byte_end":24103,"line_start":234,"line_end":234,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":24306,"byte_end":24310,"line_start":246,"line_end":246,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":30781,"byte_end":30784,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":30997,"byte_end":31000,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":31377,"byte_end":31380,"line_start":29,"line_end":29,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":31466,"byte_end":31469,"line_start":31,"line_end":31,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":31560,"byte_end":31563,"line_start":33,"line_end":33,"column_start":36,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":31659,"byte_end":31662,"line_start":35,"line_end":35,"column_start":36,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":34278,"byte_end":34281,"line_start":118,"line_end":118,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":34789,"byte_end":34792,"line_start":135,"line_end":135,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":34967,"byte_end":34970,"line_start":141,"line_end":141,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":35163,"byte_end":35166,"line_start":147,"line_end":147,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":35357,"byte_end":35360,"line_start":153,"line_end":153,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":35537,"byte_end":35540,"line_start":159,"line_end":159,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":35733,"byte_end":35736,"line_start":165,"line_end":165,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":37495,"byte_end":37499,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":37721,"byte_end":37725,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":37952,"byte_end":37956,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":38291,"byte_end":38295,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":38689,"byte_end":38693,"line_start":47,"line_end":47,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":38800,"byte_end":38804,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":38916,"byte_end":38920,"line_start":51,"line_end":51,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":39042,"byte_end":39046,"line_start":53,"line_end":53,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":45355,"byte_end":45359,"line_start":244,"line_end":244,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":45666,"byte_end":45670,"line_start":255,"line_end":255,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":46338,"byte_end":46342,"line_start":275,"line_end":275,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":46823,"byte_end":46827,"line_start":290,"line_end":290,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":47112,"byte_end":47116,"line_start":300,"line_end":300,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":47960,"byte_end":47964,"line_start":331,"line_end":331,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":48172,"byte_end":48176,"line_start":337,"line_end":337,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":53726,"byte_end":53730,"line_start":117,"line_end":117,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":53819,"byte_end":53828,"line_start":119,"line_end":119,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":53937,"byte_end":53941,"line_start":121,"line_end":121,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54040,"byte_end":54049,"line_start":123,"line_end":123,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54421,"byte_end":54425,"line_start":137,"line_end":137,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54531,"byte_end":54535,"line_start":144,"line_end":144,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54628,"byte_end":54637,"line_start":150,"line_end":150,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54813,"byte_end":54822,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":55072,"byte_end":55081,"line_start":168,"line_end":168,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":55848,"byte_end":55857,"line_start":190,"line_end":190,"column_start":55,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":56053,"byte_end":56062,"line_start":200,"line_end":200,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":56898,"byte_end":56902,"line_start":234,"line_end":234,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":57748,"byte_end":57757,"line_start":269,"line_end":269,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":57907,"byte_end":57916,"line_start":276,"line_end":276,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\lib.rs","byte_start":1387,"byte_end":1390,"line_start":48,"line_end":48,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":378}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\array.rs","byte_start":15530,"byte_end":15533,"line_start":4,"line_end":4,"column_start":32,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":1845}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\array.rs","byte_start":15724,"byte_end":15727,"line_start":15,"line_end":15,"column_start":26,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":1842}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\array.rs","byte_start":15850,"byte_end":15854,"line_start":22,"line_end":22,"column_start":32,"column_end":36},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":1845}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\array.rs","byte_start":16070,"byte_end":16074,"line_start":34,"line_end":34,"column_start":26,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":1842}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\array.rs","byte_start":16205,"byte_end":16208,"line_start":41,"line_end":41,"column_start":32,"column_end":35},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":663},"to":{"krate":1,"index":1845}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\array.rs","byte_start":16399,"byte_end":16402,"line_start":52,"line_end":52,"column_start":26,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":663},"to":{"krate":1,"index":1842}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\array.rs","byte_start":16525,"byte_end":16529,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":712},"to":{"krate":1,"index":1845}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\array.rs","byte_start":16745,"byte_end":16749,"line_start":71,"line_end":71,"column_start":26,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":712},"to":{"krate":1,"index":1842}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\tuple.rs","byte_start":17639,"byte_end":17642,"line_start":7,"line_end":7,"column_start":27,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":1845}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\tuple.rs","byte_start":17832,"byte_end":17835,"line_start":18,"line_end":18,"column_start":27,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":1842}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\tuple.rs","byte_start":17958,"byte_end":17962,"line_start":25,"line_end":25,"column_start":31,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":1845}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\tuple.rs","byte_start":18184,"byte_end":18188,"line_start":37,"line_end":37,"column_start":31,"column_end":35},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":1842}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\tuple.rs","byte_start":18319,"byte_end":18322,"line_start":44,"line_end":44,"column_start":27,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":663},"to":{"krate":1,"index":1845}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\tuple.rs","byte_start":18498,"byte_end":18501,"line_start":54,"line_end":54,"column_start":27,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":663},"to":{"krate":1,"index":1842}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\tuple.rs","byte_start":18610,"byte_end":18614,"line_start":60,"line_end":60,"column_start":31,"column_end":35},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":712},"to":{"krate":1,"index":1845}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\tuple.rs","byte_start":18822,"byte_end":18826,"line_start":71,"line_end":71,"column_start":31,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":712},"to":{"krate":1,"index":1842}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":12448,"byte_end":12451,"line_start":179,"line_end":179,"column_start":34,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":1845}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":12659,"byte_end":12663,"line_start":189,"line_end":189,"column_start":43,"column_end":47},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":1845}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":12887,"byte_end":12890,"line_start":200,"line_end":200,"column_start":26,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":663},"to":{"krate":1,"index":1845}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":13065,"byte_end":13069,"line_start":210,"line_end":210,"column_start":27,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":712},"to":{"krate":1,"index":1845}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":13268,"byte_end":13271,"line_start":221,"line_end":221,"column_start":26,"column_end":29},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":1845}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":13446,"byte_end":13450,"line_start":231,"line_end":231,"column_start":27,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":1845}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":13645,"byte_end":13649,"line_start":242,"line_end":242,"column_start":22,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":778},"to":{"krate":1,"index":1836}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":13732,"byte_end":13735,"line_start":248,"line_end":248,"column_start":24,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":1836}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":13828,"byte_end":13832,"line_start":254,"line_end":254,"column_start":24,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":1836}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":13923,"byte_end":13932,"line_start":260,"line_end":260,"column_start":22,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":818},"to":{"krate":1,"index":1836}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":14014,"byte_end":14018,"line_start":267,"line_end":267,"column_start":22,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":778},"to":{"krate":1,"index":1839}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":14113,"byte_end":14116,"line_start":273,"line_end":273,"column_start":24,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":1839}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":14221,"byte_end":14225,"line_start":279,"line_end":279,"column_start":24,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":1839}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\convert\\mod.rs","byte_start":14328,"byte_end":14337,"line_start":285,"line_end":285,"column_start":22,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":818},"to":{"krate":1,"index":1839}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":19389,"byte_end":19392,"line_start":7,"line_end":7,"column_start":22,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":1992}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":19682,"byte_end":19685,"line_start":21,"line_end":21,"column_start":23,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":2023}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":19950,"byte_end":19953,"line_start":34,"line_end":34,"column_start":22,"column_end":25},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":1997}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":20243,"byte_end":20246,"line_start":48,"line_end":48,"column_start":23,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":2027}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":20530,"byte_end":20533,"line_start":62,"line_end":62,"column_start":20,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":1997}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":20753,"byte_end":20756,"line_start":74,"line_end":74,"column_start":26,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":2027}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":20931,"byte_end":20934,"line_start":84,"line_end":84,"column_start":20,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":1992}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":21136,"byte_end":21139,"line_start":96,"line_end":96,"column_start":26,"column_end":29},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":2023}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":21337,"byte_end":21341,"line_start":106,"line_end":106,"column_start":42,"column_end":46},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":1992}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":21694,"byte_end":21698,"line_start":120,"line_end":120,"column_start":38,"column_end":42},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":2023}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":22054,"byte_end":22058,"line_start":135,"line_end":135,"column_start":42,"column_end":46},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":1997}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":22425,"byte_end":22429,"line_start":150,"line_end":150,"column_start":38,"column_end":42},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":2027}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":22846,"byte_end":22850,"line_start":167,"line_end":167,"column_start":20,"column_end":24},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":1997}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":23146,"byte_end":23150,"line_start":180,"line_end":180,"column_start":26,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":2027}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":23329,"byte_end":23333,"line_start":190,"line_end":190,"column_start":20,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":1992}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":23537,"byte_end":23541,"line_start":202,"line_end":202,"column_start":26,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":2023}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":23716,"byte_end":23719,"line_start":212,"line_end":212,"column_start":20,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":2002}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":23921,"byte_end":23924,"line_start":224,"line_end":224,"column_start":26,"column_end":29},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":2031}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":24099,"byte_end":24103,"line_start":234,"line_end":234,"column_start":20,"column_end":24},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":2002}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\ops.rs","byte_start":24306,"byte_end":24310,"line_start":246,"line_end":246,"column_start":26,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":2031}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":30781,"byte_end":30784,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":30997,"byte_end":31000,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":31377,"byte_end":31380,"line_start":29,"line_end":29,"column_start":31,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":875},"to":{"krate":4,"index":110}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":31466,"byte_end":31469,"line_start":31,"line_end":31,"column_start":31,"column_end":34},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":663},"to":{"krate":4,"index":110}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":31560,"byte_end":31563,"line_start":33,"line_end":33,"column_start":36,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":875},"to":{"krate":4,"index":14}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":31659,"byte_end":31662,"line_start":35,"line_end":35,"column_start":36,"column_end":39},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":663},"to":{"krate":4,"index":14}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":34278,"byte_end":34281,"line_start":118,"line_end":118,"column_start":41,"column_end":44},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":4902}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":34789,"byte_end":34792,"line_start":135,"line_end":135,"column_start":40,"column_end":43},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":6215}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":34967,"byte_end":34970,"line_start":141,"line_end":141,"column_start":42,"column_end":45},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":6223}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":35163,"byte_end":35166,"line_start":147,"line_end":147,"column_start":42,"column_end":45},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":6221}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":35357,"byte_end":35360,"line_start":153,"line_end":153,"column_start":40,"column_end":43},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":663},"to":{"krate":1,"index":6215}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":35537,"byte_end":35540,"line_start":159,"line_end":159,"column_start":42,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":663},"to":{"krate":1,"index":6223}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgb.rs","byte_start":35733,"byte_end":35736,"line_start":165,"line_end":165,"column_start":42,"column_end":45},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":663},"to":{"krate":1,"index":6221}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":37495,"byte_end":37499,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":37721,"byte_end":37725,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":37952,"byte_end":37956,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":38291,"byte_end":38295,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":38689,"byte_end":38693,"line_start":47,"line_end":47,"column_start":34,"column_end":38},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":924},"to":{"krate":4,"index":110}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":38800,"byte_end":38804,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":712},"to":{"krate":4,"index":110}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":38916,"byte_end":38920,"line_start":51,"line_end":51,"column_start":39,"column_end":43},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":924},"to":{"krate":4,"index":14}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":39042,"byte_end":39046,"line_start":53,"line_end":53,"column_start":39,"column_end":43},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":712},"to":{"krate":4,"index":14}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":45355,"byte_end":45359,"line_start":244,"line_end":244,"column_start":12,"column_end":16},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":45666,"byte_end":45670,"line_start":255,"line_end":255,"column_start":12,"column_end":16},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":46338,"byte_end":46342,"line_start":275,"line_end":275,"column_start":41,"column_end":45},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":4902}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":46823,"byte_end":46827,"line_start":290,"line_end":290,"column_start":19,"column_end":23},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":47112,"byte_end":47116,"line_start":300,"line_end":300,"column_start":19,"column_end":23},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":47960,"byte_end":47964,"line_start":331,"line_end":331,"column_start":57,"column_end":61},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":924},"to":{"krate":1,"index":6215}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\internal\\rgba.rs","byte_start":48172,"byte_end":48176,"line_start":337,"line_end":337,"column_start":57,"column_end":61},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":712},"to":{"krate":1,"index":6215}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":53726,"byte_end":53730,"line_start":117,"line_end":117,"column_start":31,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":778},"to":{"krate":4,"index":110}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":53819,"byte_end":53828,"line_start":119,"line_end":119,"column_start":34,"column_end":43},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":818},"to":{"krate":4,"index":110}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":53937,"byte_end":53941,"line_start":121,"line_end":121,"column_start":36,"column_end":40},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":778},"to":{"krate":4,"index":14}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54040,"byte_end":54049,"line_start":123,"line_end":123,"column_start":39,"column_end":48},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":818},"to":{"krate":4,"index":14}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54421,"byte_end":54425,"line_start":137,"line_end":137,"column_start":24,"column_end":28},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":778},"to":{"krate":1,"index":2098}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54531,"byte_end":54535,"line_start":144,"line_end":144,"column_start":27,"column_end":31},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":778},"to":{"krate":1,"index":1845}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54628,"byte_end":54637,"line_start":150,"line_end":150,"column_start":19,"column_end":28},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":54813,"byte_end":54822,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":55072,"byte_end":55081,"line_start":168,"line_end":168,"column_start":25,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":55848,"byte_end":55857,"line_start":190,"line_end":190,"column_start":55,"column_end":64},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":818},"to":{"krate":0,"index":263}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":56053,"byte_end":56062,"line_start":200,"line_end":200,"column_start":31,"column_end":40},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":818},"to":{"krate":0,"index":255}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":56898,"byte_end":56902,"line_start":234,"line_end":234,"column_start":31,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":778},"to":{"krate":0,"index":255}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":57748,"byte_end":57757,"line_start":269,"line_end":269,"column_start":33,"column_end":42},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":818},"to":{"krate":1,"index":1845}},{"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rgb-0.8.20\\src\\alt.rs","byte_start":57907,"byte_end":57916,"line_start":276,"line_end":276,"column_start":33,"column_end":42},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":818},"to":{"krate":1,"index":1845}}]}