{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10","program":"C:\\Users\\denni\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","core_affinity","C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=55535d573257024b","-C","extra-filename=-55535d573257024b","--out-dir","d:\\Repos\\rust_prism\\rust_prism\\target\\rls\\debug\\deps","-L","dependency=d:\\Repos\\rust_prism\\rust_prism\\target\\rls\\debug\\deps","--extern","kernel32=d:\\Repos\\rust_prism\\rust_prism\\target\\rls\\debug\\deps\\libkernel32-1e7d1f5a9db3a585.rmeta","--extern","num_cpus=d:\\Repos\\rust_prism\\rust_prism\\target\\rls\\debug\\deps\\libnum_cpus-8f1ec47af59c64a9.rmeta","--extern","winapi=d:\\Repos\\rust_prism\\rust_prism\\target\\rls\\debug\\deps\\libwinapi-bd32a526b16c4a24.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\denni\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Repos\\rust_prism\\rust_prism\\target\\rls\\debug\\deps\\libcore_affinity-55535d573257024b.rmeta"},"prelude":{"crate_id":{"name":"core_affinity","disambiguator":[6294254494346141823,7901316760521936924]},"crate_root":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src","external_crates":[{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2951836381390344939,16649128255697415692]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11710271729537087300,7936810236211621860]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[221620535861096092,14052674651022364528]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6754765288211962248,11319126938093173531]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12146955935630897969,9411134559866261862]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14833668363639865695,5655522694650611187]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4272166054306925428,11429919485785531186]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12683507629027033058,3032465482526171902]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3621516987667804763,14118985286121416357]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3114763798488812350,3771385689256703239]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[12308387851717752688,1271721453298801945]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[41357415245366713,267475365531445088]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[14877867959531453948,6948897495248942720]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","num":14,"id":{"name":"num_cpus","disambiguator":[17532802395524695720,4567366357611977817]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","num":15,"id":{"name":"winapi","disambiguator":[2960638698282914680,4967541454394922489]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","num":16,"id":{"name":"kernel32","disambiguator":[17141300724075450123,16724126007151737776]}}],"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":0,"byte_end":11161,"line_start":1,"line_end":451,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":0,"byte_end":11161,"line_start":1,"line_end":451,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":23},{"krate":0,"index":29},{"krate":0,"index":27},{"krate":0,"index":25},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10}],"decl_id":null,"docs":" This crate manages CPU affinities.\n \n ## Example\n \n This example shows how create a thread for each available processor and pin each thread to its corresponding processor. \n \n ```\n extern crate core_affinity;\n \n use std::thread;\n \n // Retrieve the IDs of all active CPU cores.\n let core_ids = core_affinity::get_core_ids().unwrap();\n \n // Create a thread for each active CPU core.\n let handles = core_ids.into_iter().map(|id| {\n     thread::spawn(move || {\n         // Pin this thread to a single CPU core.\n         core_affinity::set_for_current(id);\n         // Do more work after this.\n     })\n }).collect::<Vec<_>>();\n \n for handle in handles.into_iter() {\n     handle.join().unwrap();\n }\n ```\n","sig":null,"attributes":[{"value":"! This crate manages CPU affinities.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":0,"byte_end":38,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"! ","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":39,"byte_end":43,"line_start":2,"line_end":2,"column_start":1,"column_end":5}},{"value":"! ## Example","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":44,"byte_end":58,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"! ","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":59,"byte_end":63,"line_start":4,"line_end":4,"column_start":1,"column_end":5}},{"value":"! This example shows how create a thread for each available processor and pin each thread to its corresponding processor. ","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":64,"byte_end":188,"line_start":5,"line_end":5,"column_start":1,"column_end":125}},{"value":"! ","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":189,"byte_end":193,"line_start":6,"line_end":6,"column_start":1,"column_end":5}},{"value":"! ```","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":194,"byte_end":201,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"! extern crate core_affinity;","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":202,"byte_end":233,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"! ","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":234,"byte_end":238,"line_start":9,"line_end":9,"column_start":1,"column_end":5}},{"value":"! use std::thread;","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":239,"byte_end":259,"line_start":10,"line_end":10,"column_start":1,"column_end":21}},{"value":"! ","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":260,"byte_end":264,"line_start":11,"line_end":11,"column_start":1,"column_end":5}},{"value":"! // Retrieve the IDs of all active CPU cores.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":265,"byte_end":313,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"! let core_ids = core_affinity::get_core_ids().unwrap();","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":314,"byte_end":372,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"! ","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":373,"byte_end":377,"line_start":14,"line_end":14,"column_start":1,"column_end":5}},{"value":"! // Create a thread for each active CPU core.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":378,"byte_end":426,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"! let handles = core_ids.into_iter().map(|id| {","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":427,"byte_end":476,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"!     thread::spawn(move || {","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":477,"byte_end":508,"line_start":17,"line_end":17,"column_start":1,"column_end":32}},{"value":"!         // Pin this thread to a single CPU core.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":509,"byte_end":561,"line_start":18,"line_end":18,"column_start":1,"column_end":53}},{"value":"!         core_affinity::set_for_current(id);","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":562,"byte_end":609,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"!         // Do more work after this.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":610,"byte_end":649,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"!     })","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":650,"byte_end":660,"line_start":21,"line_end":21,"column_start":1,"column_end":11}},{"value":"! }).collect::<Vec<_>>();","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":661,"byte_end":688,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"! ","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":689,"byte_end":693,"line_start":23,"line_end":23,"column_start":1,"column_end":5}},{"value":"! for handle in handles.into_iter() {","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":694,"byte_end":733,"line_start":24,"line_end":24,"column_start":1,"column_end":40}},{"value":"!     handle.join().unwrap();","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":734,"byte_end":765,"line_start":25,"line_end":25,"column_start":1,"column_end":32}},{"value":"! }","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":766,"byte_end":771,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":772,"byte_end":779,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":1063,"byte_end":1075,"line_start":37,"line_end":37,"column_start":8,"column_end":20},"name":"get_core_ids","qualname":"::get_core_ids","value":"pub fn get_core_ids() -> Option<Vec<CoreId>>","parent":null,"children":[],"decl_id":null,"docs":" This function tries to retrieve information\n on all the \"cores\" active on this system.\n","sig":null,"attributes":[{"value":"/ This function tries to retrieve information","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":962,"byte_end":1009,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/ on all the \"cores\" active on this system.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":1010,"byte_end":1055,"line_start":36,"line_end":36,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":5},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":1278,"byte_end":1293,"line_start":47,"line_end":47,"column_start":8,"column_end":23},"name":"set_for_current","qualname":"::set_for_current","value":"pub fn set_for_current(CoreId)","parent":null,"children":[],"decl_id":null,"docs":" This function tries to pin the current\n thread to the specified core.","sig":null,"attributes":[{"value":"/ This function tries to pin the current","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":1132,"byte_end":1174,"line_start":41,"line_end":41,"column_start":1,"column_end":43}},{"value":"/ thread to the specified core.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":1175,"byte_end":1208,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":1209,"byte_end":1212,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":1213,"byte_end":1228,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":1229,"byte_end":1232,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ * core_id - ID of the core to pin","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":1233,"byte_end":1270,"line_start":46,"line_end":46,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":1426,"byte_end":1432,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"CoreId","qualname":"::CoreId","value":"CoreId { id }","parent":null,"children":[{"krate":0,"index":24}],"decl_id":null,"docs":" This represents a CPU core.\n","sig":null,"attributes":[{"value":"/ This represents a CPU core.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":1353,"byte_end":1384,"line_start":51,"line_end":51,"column_start":1,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\core_affinity-0.5.10\\src\\lib.rs","byte_start":1443,"byte_end":1445,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"name":"id","qualname":"::CoreId::id","value":"usize","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}