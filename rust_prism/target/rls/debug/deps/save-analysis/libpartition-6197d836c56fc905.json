{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1","program":"C:\\Users\\denni\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","partition","C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=6197d836c56fc905","-C","extra-filename=-6197d836c56fc905","--out-dir","d:\\Repos\\rust_prism\\rust_prism\\target\\rls\\debug\\deps","-L","dependency=d:\\Repos\\rust_prism\\rust_prism\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\denni\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Repos\\rust_prism\\rust_prism\\target\\rls\\debug\\deps\\libpartition-6197d836c56fc905.rmeta"},"prelude":{"crate_id":{"name":"partition","disambiguator":[7287077626132246337,5695893826654313947]},"crate_root":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src","external_crates":[{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[11710271729537087300,7936810236211621860]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[221620535861096092,14052674651022364528]}},{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[6754765288211962248,11319126938093173531]}}],"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":0,"byte_end":2460,"line_start":1,"line_end":74,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":0,"byte_end":2460,"line_start":1,"line_end":74,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4}],"decl_id":null,"docs":" This crate has only one `partition(&[T], P)` function to partition slices\n in place.\n","sig":null,"attributes":[{"value":"! This crate has only one `partition(&[T], P)` function to partition slices","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"! in place.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":78,"byte_end":91,"line_start":2,"line_end":2,"column_start":1,"column_end":14}},{"value":"no_std","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":115,"byte_end":121,"line_start":3,"line_end":3,"column_start":24,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":4},"span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":908,"byte_end":917,"line_start":25,"line_end":25,"column_start":8,"column_end":17},"name":"partition","qualname":"::partition","value":"pub fn partition<T, P>(&mut [T], P) -> (&mut [T], &mut [T]) where P: Fn(&T) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" partition a mutable slice in-place so that it contains all elements for\n which `predicate(e)` is `true`, followed by all elements for which\n `predicate(e)` is `false`. Returns sub-slices to all predicated and\n non-predicated elements, respectively.","sig":null,"attributes":[{"value":"/ partition a mutable slice in-place so that it contains all elements for","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":164,"byte_end":239,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ which `predicate(e)` is `true`, followed by all elements for which","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":240,"byte_end":310,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ `predicate(e)` is `false`. Returns sub-slices to all predicated and","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":311,"byte_end":382,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/ non-predicated elements, respectively.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":383,"byte_end":425,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":426,"byte_end":429,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This does roughly the same as `Iterator::partition(_)`, but without","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":430,"byte_end":501,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ requiring any additional storage.","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":502,"byte_end":539,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":540,"byte_end":543,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Examples","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":544,"byte_end":556,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":557,"byte_end":560,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":561,"byte_end":568,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/# use partition::partition;","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":569,"byte_end":599,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ let mut even_odd = [0u8, 1, 2, 3, 4, 5, 6];","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":600,"byte_end":647,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/ let (even, odd) = partition(&mut even_odd, |x| x & 1 == 0);","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":648,"byte_end":711,"line_start":21,"line_end":21,"column_start":1,"column_end":64}},{"value":"/ assert!(&[0, 2, 4, 6].iter().all(|x| even.iter().any(|e| e == x)), \"expected [0, 2, 4, 6], got {:?}\", even);","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":712,"byte_end":824,"line_start":22,"line_end":22,"column_start":1,"column_end":113}},{"value":"/ assert!(&[1, 3, 5].iter().all(|x| odd.iter().any(|o| o == x)));","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":825,"byte_end":892,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\denni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\partition-0.1.1\\src\\lib.rs","byte_start":893,"byte_end":900,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}